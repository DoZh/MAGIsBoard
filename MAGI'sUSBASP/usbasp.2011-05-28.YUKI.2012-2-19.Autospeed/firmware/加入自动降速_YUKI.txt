官方的代码，PC2低电平，usbasp才会进入低速，才能读取低频率的avr芯片，比如默认内部1MHz熔丝的频率。

YUKI修改成
每次先根据跳线恢复速度，如果官方代码在高速跳线模式读不出来，就切换成低速模式读取。

//		replyBuffer[0] = ispEnterProgrammingMode();
		replyBuffer[0] = ispEnterProgrammingMode_YUKI();//代码修改成自动降速,YUKI




uchar ispEnterProgrammingMode_YUKI()
{
   uchar b;
   // return ispEnterProgrammingMode();//原来的代码
   //根据跳线恢复设置
   //跳线设置速度的部分
   ispDisconnect();
   ledRedOff();

   /* set SCK speed */
   if((PINC & (1 << PC2)) == 0)
      {
         ispSetSCKOption(USBASP_ISP_SCK_8);//低速
      }

   else
      {
         ispSetSCKOption(prog_sck);//自动
         //默认   prog_sck=USBASP_ISP_SCK_375:硬件SPI， enable SPI, master, 375kHz, XTAL/32 (default)
      }

   prog_address_newmode = 0;
   ledRedOn();
   ispConnect();

   //加入自动降速的代码
   b = ispEnterProgrammingMode();
   if(b == 1)
      {
         //如果 ispEnterProgrammingMode(); 检测了32次都失败，就降速
         ispDisconnect();
         ledRedOff();
         ispSetSCKOption(USBASP_ISP_SCK_8);//低速
         prog_address_newmode = 0;
         ledRedOn();
         ispConnect();

         b = ispEnterProgrammingMode();
      }

   return b;
}
